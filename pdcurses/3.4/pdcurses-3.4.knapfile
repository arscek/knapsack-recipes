recipe "pdcurses", "3.4" do
  sequence :configure, :compile, :install
  use :patch

  fetch "http://distfiles.openknapsack.org/#{name}/PDCurses-#{version}.tar.gz",
    :md5 => "4e04e4412d1b1392a7f9a489b95b331a"

  action :configure do
  end

  action :compile do
    # Build static library
    run "make -C win32 -f gccwin32.mak"
    run "mv win32/pdcurses.a win32/libcurses.a"

    # Build dll library
    run "rm -f win32/*.o"
    run "make -C win32 -f gccwin32.mak DLL=Y"
    run "mv win32/pdcurses.a win32/libcurses.dll.a"
  end

  action :install do
    bin_dir = install_path("bin")
    lib_dir = install_path("lib")
    include_dir = install_path("include")
    source_dir = work_path("win32")

    # use Ruby's FileUtils functionality to manually copy the artifacts
    fu = FileUtils

    # ensure directories exists prior copying
    fu.mkdir_p [bin_dir, lib_dir, include_dir]

    # copy artifacts from source directory (win32)
    fu.install File.join(source_dir, "pdcurses.dll"), bin_dir

    %w(libcurses.dll.a libcurses.a).each do |lib|
      fu.install File.join(source_dir, lib), lib_dir
    end

    %w(curses.h panel.h term.h).each do |header|
      fu.install work_path(header), include_dir
    end
  end
end
